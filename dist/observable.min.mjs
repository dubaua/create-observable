var Observable=function(){function Observable(e){this.callbacks=[],this.internal=e}var e;return Observable.prototype.subscribe=function(e){var t=this;if("function"!=typeof e)throw new TypeError("[createObservable]: expected callback to be a function.");return this.callbacks.push(e),function(){var a=t.callbacks.indexOf(e);t.callbacks=t.callbacks.slice(0,a).concat(t.callbacks.slice(a+1))}},(e=[{key:"value",get:function(){return this.internal},set:function(e){if(e!==this.internal){var t=this.internal;this.internal=e;for(var a=0;a<this.callbacks.length;a++)this.callbacks[a](this.internal,t)}}}])&&function(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}(Observable.prototype,e),Observable}();export default Observable;
//# sourceMappingURL=observable.min.mjs.map
